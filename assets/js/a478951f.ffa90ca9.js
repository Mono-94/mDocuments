"use strict";(self.webpackChunkmonodocs=self.webpackChunkmonodocs||[]).push([[1194],{4794:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>t,contentTitle:()=>a,default:()=>o,frontMatter:()=>s,metadata:()=>r,toc:()=>h});var i=n(4848),c=n(8453);const s={sidebar_position:2},a="Server",r={id:"mvehicle/functions/server",title:"Server",description:"- ## ItemCarKeys",source:"@site/docs/mvehicle/functions/server.md",sourceDirName:"mvehicle/functions",slug:"/mvehicle/functions/server",permalink:"/mDocuments/docs/mvehicle/functions/server",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mvehicle/functions/server.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"client",permalink:"/mDocuments/docs/mvehicle/functions/client"},next:{title:"mGarage",permalink:"/mDocuments/docs/category/mgarage"}},t={},h=[{value:"ItemCarKeys",id:"itemcarkeys",level:2},{value:"CreateVehicle",id:"createvehicle",level:2},{value:"GetClientProps",id:"getclientprops",level:2},{value:"GetVehicle",id:"getvehicle",level:2},{value:"GetVehicleByPlate",id:"getvehiclebyplate",level:2},{value:"GetVehicle",id:"getvehicle-1",level:2},{value:"Delete All Vehicles",id:"delete-all-vehicles",level:2},{value:"GetAllVehicles",id:"getallvehicles",level:2},{value:"Set Vehicle Owner",id:"set-vehicle-owner",level:2},{value:"SetCarOwner",id:"setcarowner",level:2},{value:"Delete All Vehicle",id:"delete-all-vehicle",level:2},{value:"save all vehicle",id:"save-all-vehicle",level:2},{value:"plate exist",id:"plate-exist",level:2},{value:"Generate plate",id:"generate-plate",level:2}];function d(e){const l={code:"code",h1:"h1",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components},{Details:n}=l;return n||function(e,l){throw new Error("Expected "+(l?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(l.h1,{id:"server",children:"Server"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["\n",(0,i.jsx)(l.h2,{id:"itemcarkeys",children:"ItemCarKeys"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(l.ol,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"source"}),"  | number"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"action"}),"  | string | 'delete' or 'add'"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"plate"}),"   | string"]}),"\n"]}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:" exports.mVehicle:ItemCarKeys(source, action, plate)\n"})}),"\n",(0,i.jsx)(l.hr,{}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["\n",(0,i.jsx)(l.h2,{id:"createvehicle",children:"CreateVehicle"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(l.p,{children:"Create Vehicle Server Setter"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"local CreateVehicleData = {\n    temporary = false, -- if vehicle temporary | date format 'YYYYMMDD HH:MM'     example '20240422 03:00' or false\n    job = nil,  -- string or false, nil ...\n    setOwner = true,    -- Set vehicle Owner? if Temporary date set true\n    owner = 'char:12asd76asd5asdas',    -- player identifier\n    coords = vector4(1.0, 1.0, 1.0, 1.0), --vector4 or table with xyzw\n    -- Vehicle, you can set as many properties as you want\n    vehicle = {                             \n        model = 'sulta',                   -- required\n        plate = Vehicles.GeneratePlate(),  -- required\n        fuelLevel = 100,                   -- required\n        color1 = [0,0,0],\n        color2 = [0,0,0],                 \n    },\n}\n\nVehicles.CreateVehicle(CreateVehicleData, function(data, Vehicle)\n   print(json.encode(data, { indent = true} ))\n\n -- Set Metadata\n  Vehicle.SetMetadata('mono', { \n    smoke = 'seems to be very smoked', \n    hungry = 'the subject is very hungry'\n  }) \n  Wait(1000)\n  -- Get Metadata\n  local metadata = Vehicle.GetMetadata('mono',)\n  print(('%s, %s'):format(metadata.smoke, metadata.hungry))\n  Wait(1000)\n  -- delete espeific Metadata\n  Vehicle.DeleteMetadata('mono', 'smoke')\n  Wait(1000)\n  -- Get new metadata\n  local metadataNew = Vehicle.GetMetadata('mono')\n  print(('%s'):format(metadataNew.hungry))\n  Wait(1000)\n  -- delete all metadata from 'mono' return nil \n  Vehicle.DeleteMetadata('mono')\n  \n\n  --GarageActions\n  -- Store/Retry\n  Vehicle.StoreVehicle('Pillbox Hill')\n\n  Vehicle.RetryVehicle(CreateVehicleData.coords)\n\n  -- impound\n  Vehicle.ImpoundVehicle('Impound Car', 100, 'Vehicle impond', '2024/05/2 15:43')\n\n  Vehicle.RetryImpound('Pillbox Hill', CreateVehicleData.coords)\nend)\n\n"})}),"\n",(0,i.jsx)(l.hr,{}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["\n",(0,i.jsx)(l.h2,{id:"getclientprops",children:"GetClientProps"}),"\n"]}),"\n",(0,i.jsx)(l.li,{children:"Returns vehicle props"}),"\n"]}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"local vehicleProps = Vehicles.GetClientProps(SourceID, VehicleNetworkID)\n"})}),"\n",(0,i.jsx)(l.hr,{}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["\n",(0,i.jsx)(l.h2,{id:"getvehicle",children:"GetVehicle"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(l.p,{children:"Returns a wide variety of functions for the vehicle entity."}),"\n",(0,i.jsxs)(l.ol,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"entity"})," | number"]}),"\n"]}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"local Vehicle = Vehicles.GetVehicle(entity) \n"})}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"Functions"}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicle.Savemetadata()\n"})}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicle.SetMetadata(key, data)\n"})}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicle.DeleteMetadata(key, value) \n"})}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicle.GetMetadata(key)     \n"})}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicle.AddKey(source) \n"})}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicle.RemoveKey(identifier)\n"})}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicle.GetKeys()\n"})}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicle.SaveProps(props)\n"})}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicle.DeleteVehicle(fromDatabaseBoolean)\n"})}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicle.StoreVehicle(parking)\n"})}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicle.RetryVehicle()\n"})}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicle.ImpoundVehicle(impound, price, note, date, endPound)\n"})}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicle.RetryImpound(ToGarage)\n"})}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicle.SetFakePlate(plate) \n"})}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicle.Private(bucket, coords, parking)\n"})})]}),"\n",(0,i.jsx)(l.hr,{}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["\n",(0,i.jsx)(l.h2,{id:"getvehiclebyplate",children:"GetVehicleByPlate"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(l.p,{children:"= Vehicles.GetVehicle()"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:" local Vehicles.GetVehicleByPlate(plate)\n"})}),"\n",(0,i.jsx)(l.hr,{}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["\n",(0,i.jsx)(l.h2,{id:"getvehicle-1",children:"GetVehicle"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"local vehicle = Vehicles.GetVehicleId(id) \n"})}),"\n",(0,i.jsx)(l.hr,{}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["\n",(0,i.jsx)(l.h2,{id:"delete-all-vehicles",children:"Delete All Vehicles"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"local AllVechiles = Vehicles.GetAllVehicles(source, VehicleTable, haveKeys) \n"})}),"\n",(0,i.jsx)(l.hr,{}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["\n",(0,i.jsx)(l.h2,{id:"getallvehicles",children:"GetAllVehicles"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsx)(l.li,{children:"soruce  = player source"}),"\n",(0,i.jsx)(l.li,{children:"VehicleTable = boolean | true get vehicles from table mVehicles false get vehicles from DB"}),"\n",(0,i.jsx)(l.li,{children:"haveKeys = boolean  | Have player keys ?"}),"\n",(0,i.jsx)(l.li,{children:"return all vehicles from source"}),"\n"]}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"local AllVechiles = Vehicles.GetAllVehicles(source, VehicleTable, haveKeys) \n"})}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["\n",(0,i.jsx)(l.h2,{id:"set-vehicle-owner",children:"Set Vehicle Owner"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicles.SetVehicleOwner({\n    job = ?,\n    owner = ?,\n    parking = ?,\n    plate = ?,\n    type = ?,\n    vehicle = ?,\n})\n"})}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["\n",(0,i.jsx)(l.h2,{id:"setcarowner",children:"SetCarOwner"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicles.SetCarOwner(src)\n"})}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["\n",(0,i.jsx)(l.h2,{id:"delete-all-vehicle",children:"Delete All Vehicle"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicles.DelAllVehicles() \n"})}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["\n",(0,i.jsx)(l.h2,{id:"save-all-vehicle",children:"save all vehicle"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(l.p,{children:"true/false to delete vehicles"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicles.SaveAllVehicles(delete)\n"})}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["\n",(0,i.jsx)(l.h2,{id:"plate-exist",children:"plate exist"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(l.p,{children:"return boolean"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicles.PlateExist(plate) \n"})}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["\n",(0,i.jsx)(l.h2,{id:"generate-plate",children:"Generate plate"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(l.p,{children:"return plate string"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"Vehicles.GeneratePlate()\n"})})]})}function o(e={}){const{wrapper:l}={...(0,c.R)(),...e.components};return l?(0,i.jsx)(l,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,l,n)=>{n.d(l,{R:()=>a,x:()=>r});var i=n(6540);const c={},s=i.createContext(c);function a(e){const l=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function r(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),i.createElement(s.Provider,{value:l},e.children)}}}]);